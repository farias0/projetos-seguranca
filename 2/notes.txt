- simetrica: mesma chave encripta e decripta (ex. AES)
- assimetrica: uma chave pra encriptar, e outra para decriptar (ex. RSA)

- Assimétrico garante 1) confidencialidade, 2) autenticidade
- ao criptografar com a chave pública do desinatário, garanto a confidenciabilidade, pois só ele vai conseguir ler
- ao criptografar com a minha chave privada, garanto a autenticidade, pois só com a minha chave pública poderão ler
- ao fazer os dois processos, garanto ambos confidenciabilidade e autenticidade

- integridade: hash (usar SHA-2, SHA-3 ou SHA-256)

__
ATV 2

End to End:
- trocar chave simétrica com cada cliente no momento da conexão (handshake)
- como identificar clientes? nome (como não forjar)? ip (cliente tem acesso?)
- mensagem tem que ser encriptada e enviada para cada cliente
Cliente-servidor:
- troca chave com servidor na conexão (handshake)
- alguem com acesso ao servidor pode ler
- mais simples

- flush de chaves na saída para não poluir memória e garantir segurança
- identificar clientes por IP? da pra forjar?
